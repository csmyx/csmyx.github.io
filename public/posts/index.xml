<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on csmyx blog</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on csmyx blog</description>
    <image>
      <title>csmyx blog</title>
      <url>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Apr 2025 05:22:17 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>rCore-Camp-2025S 学习笔记</title>
      <link>http://localhost:1313/posts/my-first-post-copy-2/</link>
      <pubDate>Thu, 10 Apr 2025 05:22:17 +0800</pubDate>
      <guid>http://localhost:1313/posts/my-first-post-copy-2/</guid>
      <description>&lt;h2 id=&#34;chapter-1&#34;&gt;chapter 1&lt;/h2&gt;
&lt;h3 id=&#34;remove-std-lib-dependency&#34;&gt;remove std-lib dependency&lt;/h3&gt;
&lt;h4 id=&#34;remove-std-support&#34;&gt;remove std support&lt;/h4&gt;
&lt;p&gt;Cause we want to develop our own os, so we can&amp;rsquo;t depend on the &lt;code&gt;std&lt;/code&gt; lib. so we add &lt;code&gt;#![no_std]&lt;/code&gt; in front of main.rs to remove dependency on &lt;code&gt;std&lt;/code&gt; lib. we only use the &lt;code&gt;core&lt;/code&gt; lib, which is decouple from os (I think).&lt;/p&gt;
&lt;h4 id=&#34;add-panic_handler&#34;&gt;add panic_handler&lt;/h4&gt;
&lt;p&gt;We need a panic_handler to make the crab happy. It is support by &lt;code&gt;std&lt;/code&gt;, but not &lt;code&gt;core&lt;/code&gt;. So we add it manually in a mod &lt;code&gt;lang_items&lt;/code&gt;. Then we remove the main function, and add &lt;code&gt;#![no_main]&lt;/code&gt; in fron of main.rs too. Now we finally got a useless but complete program, that doesn&amp;rsquo;t rely on std lib provided by os!&lt;/p&gt;</description>
    </item>
    <item>
      <title>rCore-Camp-2025S 学习笔记</title>
      <link>http://localhost:1313/posts/my-first-post-copy-3/</link>
      <pubDate>Thu, 10 Apr 2025 05:22:17 +0800</pubDate>
      <guid>http://localhost:1313/posts/my-first-post-copy-3/</guid>
      <description>&lt;h2 id=&#34;chapter-1&#34;&gt;chapter 1&lt;/h2&gt;
&lt;h3 id=&#34;remove-std-lib-dependency&#34;&gt;remove std-lib dependency&lt;/h3&gt;
&lt;h4 id=&#34;remove-std-support&#34;&gt;remove std support&lt;/h4&gt;
&lt;p&gt;Cause we want to develop our own os, so we can&amp;rsquo;t depend on the &lt;code&gt;std&lt;/code&gt; lib. so we add &lt;code&gt;#![no_std]&lt;/code&gt; in front of main.rs to remove dependency on &lt;code&gt;std&lt;/code&gt; lib. we only use the &lt;code&gt;core&lt;/code&gt; lib, which is decouple from os (I think).&lt;/p&gt;
&lt;h4 id=&#34;add-panic_handler&#34;&gt;add panic_handler&lt;/h4&gt;
&lt;p&gt;We need a panic_handler to make the crab happy. It is support by &lt;code&gt;std&lt;/code&gt;, but not &lt;code&gt;core&lt;/code&gt;. So we add it manually in a mod &lt;code&gt;lang_items&lt;/code&gt;. Then we remove the main function, and add &lt;code&gt;#![no_main]&lt;/code&gt; in fron of main.rs too. Now we finally got a useless but complete program, that doesn&amp;rsquo;t rely on std lib provided by os!&lt;/p&gt;</description>
    </item>
    <item>
      <title>rCore-Camp-2025S 学习笔记</title>
      <link>http://localhost:1313/posts/my-first-post-copy-4/</link>
      <pubDate>Thu, 10 Apr 2025 05:22:17 +0800</pubDate>
      <guid>http://localhost:1313/posts/my-first-post-copy-4/</guid>
      <description>&lt;h2 id=&#34;chapter-1&#34;&gt;chapter 1&lt;/h2&gt;
&lt;h3 id=&#34;remove-std-lib-dependency&#34;&gt;remove std-lib dependency&lt;/h3&gt;
&lt;h4 id=&#34;remove-std-support&#34;&gt;remove std support&lt;/h4&gt;
&lt;p&gt;Cause we want to develop our own os, so we can&amp;rsquo;t depend on the &lt;code&gt;std&lt;/code&gt; lib. so we add &lt;code&gt;#![no_std]&lt;/code&gt; in front of main.rs to remove dependency on &lt;code&gt;std&lt;/code&gt; lib. we only use the &lt;code&gt;core&lt;/code&gt; lib, which is decouple from os (I think).&lt;/p&gt;
&lt;h4 id=&#34;add-panic_handler&#34;&gt;add panic_handler&lt;/h4&gt;
&lt;p&gt;We need a panic_handler to make the crab happy. It is support by &lt;code&gt;std&lt;/code&gt;, but not &lt;code&gt;core&lt;/code&gt;. So we add it manually in a mod &lt;code&gt;lang_items&lt;/code&gt;. Then we remove the main function, and add &lt;code&gt;#![no_main]&lt;/code&gt; in fron of main.rs too. Now we finally got a useless but complete program, that doesn&amp;rsquo;t rely on std lib provided by os!&lt;/p&gt;</description>
    </item>
    <item>
      <title>rCore-Camp-2025S 学习笔记</title>
      <link>http://localhost:1313/posts/my-first-post-copy-5/</link>
      <pubDate>Thu, 10 Apr 2025 05:22:17 +0800</pubDate>
      <guid>http://localhost:1313/posts/my-first-post-copy-5/</guid>
      <description>&lt;h2 id=&#34;chapter-1&#34;&gt;chapter 1&lt;/h2&gt;
&lt;h3 id=&#34;remove-std-lib-dependency&#34;&gt;remove std-lib dependency&lt;/h3&gt;
&lt;h4 id=&#34;remove-std-support&#34;&gt;remove std support&lt;/h4&gt;
&lt;p&gt;Cause we want to develop our own os, so we can&amp;rsquo;t depend on the &lt;code&gt;std&lt;/code&gt; lib. so we add &lt;code&gt;#![no_std]&lt;/code&gt; in front of main.rs to remove dependency on &lt;code&gt;std&lt;/code&gt; lib. we only use the &lt;code&gt;core&lt;/code&gt; lib, which is decouple from os (I think).&lt;/p&gt;
&lt;h4 id=&#34;add-panic_handler&#34;&gt;add panic_handler&lt;/h4&gt;
&lt;p&gt;We need a panic_handler to make the crab happy. It is support by &lt;code&gt;std&lt;/code&gt;, but not &lt;code&gt;core&lt;/code&gt;. So we add it manually in a mod &lt;code&gt;lang_items&lt;/code&gt;. Then we remove the main function, and add &lt;code&gt;#![no_main]&lt;/code&gt; in fron of main.rs too. Now we finally got a useless but complete program, that doesn&amp;rsquo;t rely on std lib provided by os!&lt;/p&gt;</description>
    </item>
    <item>
      <title>rCore-Camp-2025S 学习笔记</title>
      <link>http://localhost:1313/posts/my-first-post-copy-6/</link>
      <pubDate>Thu, 10 Apr 2025 05:22:17 +0800</pubDate>
      <guid>http://localhost:1313/posts/my-first-post-copy-6/</guid>
      <description>&lt;h2 id=&#34;chapter-1&#34;&gt;chapter 1&lt;/h2&gt;
&lt;h3 id=&#34;remove-std-lib-dependency&#34;&gt;remove std-lib dependency&lt;/h3&gt;
&lt;h4 id=&#34;remove-std-support&#34;&gt;remove std support&lt;/h4&gt;
&lt;p&gt;Cause we want to develop our own os, so we can&amp;rsquo;t depend on the &lt;code&gt;std&lt;/code&gt; lib. so we add &lt;code&gt;#![no_std]&lt;/code&gt; in front of main.rs to remove dependency on &lt;code&gt;std&lt;/code&gt; lib. we only use the &lt;code&gt;core&lt;/code&gt; lib, which is decouple from os (I think).&lt;/p&gt;
&lt;h4 id=&#34;add-panic_handler&#34;&gt;add panic_handler&lt;/h4&gt;
&lt;p&gt;We need a panic_handler to make the crab happy. It is support by &lt;code&gt;std&lt;/code&gt;, but not &lt;code&gt;core&lt;/code&gt;. So we add it manually in a mod &lt;code&gt;lang_items&lt;/code&gt;. Then we remove the main function, and add &lt;code&gt;#![no_main]&lt;/code&gt; in fron of main.rs too. Now we finally got a useless but complete program, that doesn&amp;rsquo;t rely on std lib provided by os!&lt;/p&gt;</description>
    </item>
    <item>
      <title>rCore-Camp-2025S 学习笔记</title>
      <link>http://localhost:1313/posts/my-first-post-copy-7/</link>
      <pubDate>Thu, 10 Apr 2025 05:22:17 +0800</pubDate>
      <guid>http://localhost:1313/posts/my-first-post-copy-7/</guid>
      <description>&lt;h2 id=&#34;chapter-1&#34;&gt;chapter 1&lt;/h2&gt;
&lt;h3 id=&#34;remove-std-lib-dependency&#34;&gt;remove std-lib dependency&lt;/h3&gt;
&lt;h4 id=&#34;remove-std-support&#34;&gt;remove std support&lt;/h4&gt;
&lt;p&gt;Cause we want to develop our own os, so we can&amp;rsquo;t depend on the &lt;code&gt;std&lt;/code&gt; lib. so we add &lt;code&gt;#![no_std]&lt;/code&gt; in front of main.rs to remove dependency on &lt;code&gt;std&lt;/code&gt; lib. we only use the &lt;code&gt;core&lt;/code&gt; lib, which is decouple from os (I think).&lt;/p&gt;
&lt;h4 id=&#34;add-panic_handler&#34;&gt;add panic_handler&lt;/h4&gt;
&lt;p&gt;We need a panic_handler to make the crab happy. It is support by &lt;code&gt;std&lt;/code&gt;, but not &lt;code&gt;core&lt;/code&gt;. So we add it manually in a mod &lt;code&gt;lang_items&lt;/code&gt;. Then we remove the main function, and add &lt;code&gt;#![no_main]&lt;/code&gt; in fron of main.rs too. Now we finally got a useless but complete program, that doesn&amp;rsquo;t rely on std lib provided by os!&lt;/p&gt;</description>
    </item>
    <item>
      <title>rCore-Camp-2025S 学习笔记</title>
      <link>http://localhost:1313/posts/my-first-post-copy/</link>
      <pubDate>Thu, 10 Apr 2025 05:22:17 +0800</pubDate>
      <guid>http://localhost:1313/posts/my-first-post-copy/</guid>
      <description>&lt;h2 id=&#34;chapter-1&#34;&gt;chapter 1&lt;/h2&gt;
&lt;h3 id=&#34;remove-std-lib-dependency&#34;&gt;remove std-lib dependency&lt;/h3&gt;
&lt;h4 id=&#34;remove-std-support&#34;&gt;remove std support&lt;/h4&gt;
&lt;p&gt;Cause we want to develop our own os, so we can&amp;rsquo;t depend on the &lt;code&gt;std&lt;/code&gt; lib. so we add &lt;code&gt;#![no_std]&lt;/code&gt; in front of main.rs to remove dependency on &lt;code&gt;std&lt;/code&gt; lib. we only use the &lt;code&gt;core&lt;/code&gt; lib, which is decouple from os (I think).&lt;/p&gt;
&lt;h4 id=&#34;add-panic_handler&#34;&gt;add panic_handler&lt;/h4&gt;
&lt;p&gt;We need a panic_handler to make the crab happy. It is support by &lt;code&gt;std&lt;/code&gt;, but not &lt;code&gt;core&lt;/code&gt;. So we add it manually in a mod &lt;code&gt;lang_items&lt;/code&gt;. Then we remove the main function, and add &lt;code&gt;#![no_main]&lt;/code&gt; in fron of main.rs too. Now we finally got a useless but complete program, that doesn&amp;rsquo;t rely on std lib provided by os!&lt;/p&gt;</description>
    </item>
    <item>
      <title>rCore-Camp-2025S 学习笔记</title>
      <link>http://localhost:1313/posts/my-first-post/</link>
      <pubDate>Thu, 10 Apr 2025 05:22:17 +0800</pubDate>
      <guid>http://localhost:1313/posts/my-first-post/</guid>
      <description>&lt;h2 id=&#34;chapter-1&#34;&gt;chapter 1&lt;/h2&gt;
&lt;h3 id=&#34;remove-std-lib-dependency&#34;&gt;remove std-lib dependency&lt;/h3&gt;
&lt;h4 id=&#34;remove-std-support&#34;&gt;remove std support&lt;/h4&gt;
&lt;p&gt;Cause we want to develop our own os, so we can&amp;rsquo;t depend on the &lt;code&gt;std&lt;/code&gt; lib. so we add &lt;code&gt;#![no_std]&lt;/code&gt; in front of main.rs to remove dependency on &lt;code&gt;std&lt;/code&gt; lib. we only use the &lt;code&gt;core&lt;/code&gt; lib, which is decouple from os (I think).&lt;/p&gt;
&lt;h4 id=&#34;add-panic_handler&#34;&gt;add panic_handler&lt;/h4&gt;
&lt;p&gt;We need a panic_handler to make the crab happy. It is support by &lt;code&gt;std&lt;/code&gt;, but not &lt;code&gt;core&lt;/code&gt;. So we add it manually in a mod &lt;code&gt;lang_items&lt;/code&gt;. Then we remove the main function, and add &lt;code&gt;#![no_main]&lt;/code&gt; in fron of main.rs too. Now we finally got a useless but complete program, that doesn&amp;rsquo;t rely on std lib provided by os!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
